buildscript {
   repositories {
      mavenCentral()
   }
   dependencies {
      classpath 'com.android.tools.build:gradle:0.6.1'
   }
}
apply plugin: 'android'

repositories {
   mavenCentral()
   mavenLocal() // Needed to pick up analytics from maven-android-sdk-deployer
   maven {
      url 'https://raw.github.com/iFixit/ark/master/releases/'
   }
}

dependencies {
   compile fileTree(dir: 'libs', include: '*.jar')
   compile "com.android.support:support-v4:18.0.0"
   compile "com.actionbarsherlock:actionbarsherlock:4.4.0@aar"
   compile "com.squareup.okhttp:okhttp:1.2.1"
   compile "com.marczych.androidsectionheaders:androidsectionheaders:1.0.0"
   compile "com.squareup:otto:1.3.4"
   compile "com.github.kevinsawicki:http-request:5.4.1"
   compile "org.jsoup:jsoup:1.7.2"
   compile "com.google.code.gson:gson:2.2.4"
   compile "com.squareup.picasso:picasso:2.0.2"
   compile "net.simonvt.menudrawer:menudrawer:3.0.4@aar"
   compile "com.viewpagerindicator:viewpagerindicator:2.4.1"
   compile "com.github.chrisbanes.pulltorefresh:pulltorefresh:2.1.2"
   compile "it.sephiroth.android.library.imagezoom:imagezoom:1.0.0"
   compile "com.mobeta.android.dslv:dslv:0.6.1"
}

// List of sites. Used to create signingConfigs and sourceSets.
// Ideally this would be used to create the productFlavors too but there are
// enough differences between flavors that it would be challenging to make it
// better.
def sites = ["ifixit", "dozuki", "accustream"]

android {
   compileSdkVersion 19
   buildToolsVersion "18.0.1"

   defaultConfig {
      versionCode 43
      versionName "2.2.0"
      minSdkVersion 8
      targetSdkVersion 19
      packageName "com.dozuki.ifixit"
   }

   signingConfigs {
      for (site in sites) {
         "${site}" createSiteSigningConfig(site)
      }
   }

   buildTypes {
      debug {
         buildConfig 'public static final String DEV_SERVER = ' + devServer + ';'
      }

      release {
         buildConfig 'public static final String DEV_SERVER = "";'

         runProguard true
         proguardFile 'proguard.cfg'
      }
   }

   productFlavors {
      ifixit {
         signingConfig signingConfigs.ifixit

         buildConfig createSiteBuildConfig("ifixit", "UA-30506-9")
      }

      dozuki {
         dependencies {
            dozukiCompile 'com.embarkmobile:zxing-android-minimal:1.1.4@aar'
            dozukiCompile 'com.google.zxing:core:2.2'
         }

         signingConfig signingConfigs.dozuki
         packageName "com.dozuki.dozuki"
         minSdkVersion 9

         buildConfig createSiteBuildConfig("dozuki", "UA-30506-19")
      }

      accustream {
         dependencies {
            accustreamCompile 'com.embarkmobile:zxing-android-minimal:1.1.4@aar'
            accustreamCompile 'com.google.zxing:core:2.2'
         }

         signingConfig signingConfigs.accustream
         packageName "com.dozuki.accustream"
         minSdkVersion 9

         buildConfig createSiteBuildConfig("accustream", "UA-30506-19")
      }
   }

   sourceSets {
      main {
         manifest.srcFile 'AndroidManifest.xml'
         java.srcDirs = ['src']
         resources.srcDirs = ['src']
         aidl.srcDirs = ['src']
         renderscript.srcDirs = ['src']
         res.srcDirs = ['res']
         assets.srcDirs = ['assets']
      }

      for (site in sites) {
         "${site}" createSiteSourceSet(site)
      }
   }
}

/* Various functions to create DSL for a site. */

def createSiteSigningConfig(siteName) {
   return {
      storeFile file("sites/${siteName}/keystore")
      keyAlias getProperty("${siteName}KeyAlias")
      storePassword getProperty("${siteName}StorePassword")
      keyPassword getProperty("${siteName}KeyPassword")
   }
}

def createSiteSourceSet(siteName) {
   if (siteName == 'dozuki') {
      return {
         manifest.srcFile "sites/dozuki/AndroidManifest.xml"
         res.srcDirs = ["sites/dozuki/res", "sites/accustream/res", "sites/ifixit/res"]
         java.srcDirs = ["sites/dozuki/src", "sites/accustream/src", "sites/ifixit/src"]
      }
   } else {
      return {
         manifest.srcFile "sites/${siteName}/AndroidManifest.xml"
         res.srcDirs = ["sites/${siteName}/res", "sites/${siteName}/site-res"]
         java.srcDirs = ["sites/${siteName}/src"]
      }
   }
}

def createSiteBuildConfig(siteName, gaPropertyId) {
   return "public static final String GA_PROPERTY_ID = \"${gaPropertyId}\";" +
          "public static final String SEARCH_PROVIDER_AUTHORITY = \"com.dozuki.${siteName}.ui.search.SearchSuggestionProvider\";" +
          "public static final String SITE_NAME = \"${siteName}\";\n" +
          'public static final String APP_ID = ' + getProperty("${siteName}AppId") + ';'
}
